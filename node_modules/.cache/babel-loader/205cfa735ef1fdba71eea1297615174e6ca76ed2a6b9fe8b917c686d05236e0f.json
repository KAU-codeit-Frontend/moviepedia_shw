{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nfunction useAsync(asyncFunction) {\n  _s();\n  const [pending, setPending] = useState(false);\n  const [error, setError] = useState(null);\n  const wrappedFunction = useCallback(async (...args) => {\n    setPending(true);\n    setError(null);\n    try {\n      return await asyncFunction(...args);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setPending(false);\n    }\n  }, [asyncFunction]);\n  return [pending, error, wrappedFunction];\n}\n_s(useAsync, \"ICWZDpPzPcjeTYeNH4waCCaMjjc=\");\nexport default useAsync;","map":{"version":3,"names":["useCallback","useState","useAsync","asyncFunction","_s","pending","setPending","error","setError","wrappedFunction","args"],"sources":["C:/Users/seonhyeonwook/Desktop/codeit/moviepedia/src/hooks/useAsync.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nfunction useAsync(asyncFunction) {\n  const [pending, setPending] = useState(false);\n  const [error, setError] = useState(null);\n\n  const wrappedFunction = useCallback(\n    async (...args) => {\n      setPending(true);\n      setError(null);\n      try {\n        return await asyncFunction(...args);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setPending(false);\n      }\n    },\n    [asyncFunction]\n  );\n\n  return [pending, error, wrappedFunction];\n}\n\nexport default useAsync;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,QAAQA,CAACC,aAAa,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,eAAe,GAAGT,WAAW,CACjC,OAAO,GAAGU,IAAI,KAAK;IACjBJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,OAAO,MAAML,aAAa,CAAC,GAAGO,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EACD,CAACH,aAAa,CAChB,CAAC;EAED,OAAO,CAACE,OAAO,EAAEE,KAAK,EAAEE,eAAe,CAAC;AAC1C;AAACL,EAAA,CApBQF,QAAQ;AAsBjB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}